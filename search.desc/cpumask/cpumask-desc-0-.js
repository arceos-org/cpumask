searchState.loadedDescShard("cpumask", 0, "cpumask\nA compact array of bits which represents a set of physical …\nAn iterator over the indices in a cpumask which are <code>true</code>.\nGet this cpumask as a slice of bytes.\nGet a reference to this cpumask’s backing store.\nFind the index of the first <code>false</code> bit in the cpumask.\nFind the index of the first <code>true</code> bit in the cpumask.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a cpumask from a raw <code>usize</code> value. The value must …\nConstruct a cpumask from a value of the same type as its …\nConstruct a cpumask with every bit set to <code>true</code>.\nGet the value of the bit at a given index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this cpumask into a value of the type of its …\nInvert all the bits in the cpumask.\nTest if the cpumask contains only <code>false</code> bits.\nTest if the cpumask contains only <code>true</code> bits.\nFind the index of the last <code>false</code> bit in the cpumask.\nFind the index of the last <code>true</code> bit in the cpumask.\nCount the number of <code>true</code> bits in the cpumask.\nConstruct a cpumask where every bit with index less than …\nConstruct a cpumask with every bit set to <code>false</code>.\nFind the index of the first <code>false</code> bit in the cpumask after …\nFind the index of the first <code>true</code> bit in the cpumask after …\nConstruct a cpumask with a single bit set at the specified …\nFind the index of the first <code>false</code> bit in the cpumask …\nFind the index of the last <code>true</code> bit in the cpumask before …\nSet the value of the bit at a given index.")